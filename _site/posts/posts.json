[
  {
    "path": "posts/2022-04-25-ml-powered-heart-disease-screening/",
    "title": "ML-powered heart disease screening",
    "description": "Can you know you are at risk of heart disease with easily obtainable personal indicators?",
    "author": [
      {
        "name": "Yongrui Chen",
        "url": "https://github.com/NeilChenccc"
      },
      {
        "name": "Jingsong Gao",
        "url": "https://github.com/jingshenSN2"
      },
      {
        "name": "Ercong Luo",
        "url": "https://github.com/ErcongLuo"
      },
      {
        "name": "Rui Qiu",
        "url": "https://github.com/rexarski"
      },
      {
        "name": "Lu Zhang",
        "url": "https://github.com/zhanglu980608"
      }
    ],
    "date": "2022-04-25",
    "categories": [],
    "contents": "\nüîóGitHub\nrepo\nAbstract\nIn 2020, the U.S. Center for Disease Control (CDC) compiled a\n319,795-by-18 tabular dataset for heart disease prediction. Treating the\nboolean-valued column ‚Äúheart_disease‚Äù as the dependent variable and all\nother columns as predictor variables, the best initial screening model\nis picked among five candidate machine learning (ML) models. Initial\nscreening particularly requires high recall so as not to miss any true\npositives. The training and test results reveal that gradient-boosted\ntree is the best model for this purpose, achieving a high recall rate of\n78.5%.\nIntroduction\nAccording to the CDC, heart disease is a leading natural cause of\ndeath in the U.S. Finding important indicators for heart disease is an\nongoing valuable inquiry in the medical community. Highly flexible\nmodels with low interpretability such as a deep neural network are\navoided for this reason. Decision tree-based models, namely a\ngradient-boosted tree and a random forest are chosen both for the ease\nof interpreting the relative importance of input features and their\nrobustness in learning complex data patterns. Other methods based on the\nmaximum likelihood principle such as a naive Bayes classifier, logistic\nregression and linear discriminant analysis (LDA) are also implemented\nto compare model performance based on a different approach from\ntree-based models. In the order of importance, the metrics used for\nevaluating model effectiveness include recall, area under the receiver\noperating characteristic curve (AUC-ROC), precision, and accuracy.\nDataset and EDA\nDataset: Originally, the dataset comes from the CDC\nand is a major part of the Behavioral Risk Factor Surveillance System\n(BRFSS), which conducts annual telephone surveys to gather data on the\nhealth status of U.S. residents. It contains 18 variables including age,\ngender, BMI, etc., revealing most of the essential information of heart\ndiseases.\nDataset bias: Over 90% of respondents in the\ndataset do not have heart disease. Therefore a hypothetical null model\nthat guesses ‚ÄúNo‚Äù for every single row will achieve a high accuracy\nscore of 90% despite learning nothing about the data. Extensive data\nengineering techniques were used to counter this bias at training time\nto produce the desired model (see Models section).\nEDA:\nRespondents who suffer from diabetics and stroke, or have a\nrelatively poor general health condition are more likely to have heart\ndiseases.\nAs a respondent‚Äôs age increases, the probability of having heart\ndisease so tends to ascend.\nIt is statistically significant that the average BMI of men is\nhigher than that of women, and a higher BMI is associated with a higher\nrisk for heart disease.\n\neda-01eda-02eda-03Models\nThe original dataset is split into 80%-20% train-test subsets.\nFurthermore, an additional 10-fold cross-validation is carried out for\nthe training set. All splitting is stratified on response.\nThe five candidate models in this project are:\nbaseline models: {logitic regression, LDA, na√Øve\nBayes}\ntree models: {random forest, XGBoost}\nTo overcome the class imbalance in the training set, for baseline\nmodels, a ROSE (Random Over-Sampling Examples) is used in favor of the\nunderrepresented positive samples. For tree models, the class imbalance\nis countered by tuning the class weights higher in favor of positive\nsamples.\nFor each tree-based model, hyperparameter tuning was achieved by\nexploring a large grid of hyperparameter combinations, and then the\nfinal model is selected based on the best (highest) ROC-AUC value. After\nobtaining the optimal hyperparameters, the test dataset is used to check\nfor overfitting. Finally, metrics such as recall, AUC-ROC, precision,\nand accuracy are used for evaluation.\nResults\nSince the goal of these models is to detect potential heart disease\nin the early stage, an essential priority is to keep a low\nfalse-negative rate. Therefore, instead of\naccuracy, special classification metrics such as recall,\nJ-index, and ROC-AUC are of greater importance and are included in Table\n1 to the right.\nTable 1: Metrics Comparison for Each\nImplemented Model.\n*J index: Youden‚Äôs J statistic, Kappa: Cohen‚Äôs kappa coefficient, PR\nAUC: area under the precision-recall curve, ROC AUC: area under the ROC\ncurve\n\nLogistic regression, LDA, and XGBoost are the best\nmodels in terms of overall performance. XGBoost model\nhas the highest recall, J index, and PR-AUC. By examining ROC\nand PRC for each of five models, one can also conclude that the XGBoost\nmodel is indeed the best option in general.\nROC-AUCPRCAdditionally, relative feature importance in logistic regression and\nXGBoost are analyzed to determine whether a factor is related to heart\ndisease. The most relevant variables are listed below (in descending\norder of importance, positive/negative):\ngreater than 70 years old | stroke\n| good general health | less than 45 years old |\ndifficult walking | smoking more than 100\ncigarettes in entire life | diabetic |\nasthma | _heavily alcohol drinking*_ | regular\nexercise\n\n*may not be true due to data bias.\n\nvipConclusion\nKey takeaways of this study can be summarized as follows:\nAll five models agree that age, general health status, and\npre-existing conditions are key risk indicators for heart\ndisease. Features that are easily obtainable and do not need a\nhospital visit such as age, fitness level, BMI can be used to train\nrobust ML models to identify people with high risk of heart disease.\nA practical application can be deployed using the XGBoost model\nto notify a user through their health app when their health status\nindicates high risks for heart disease and recommend a hospital visit\nfor an accurate diagnosis. With a training dataset that\nunder-represents positive cases, low false-positive vs low\nfalse-negative rate is a trade-off. Because keeping the false\nnegative rate low is a priority, slightly sacrificing accuracy in favor\nof a lower false-negative rate is a necessary compromise. This is also\nwhy these screening models cannot replace medical imaging and clinical\nlaboratory tests for heart disease diagnosis. Screening isn‚Äôt\ndiagnosis.\n\n\n\n",
    "preview": "posts/2022-04-25-ml-powered-heart-disease-screening/images/eda-02.png",
    "last_modified": "2022-04-25T11:03:20-04:00",
    "input_file": {},
    "preview_width": 800,
    "preview_height": 471
  },
  {
    "path": "posts/2021-12-06-kaggle/",
    "title": "Data Science Career Paths & Skillsets in 2021",
    "description": "A final project of ANLY-511: Prob Modeling/Stat Computing at Georgetown University.",
    "author": [
      {
        "name": "Jingsong Gao",
        "url": "https://github.com/jingshenSN2"
      },
      {
        "name": "Ercong Luo",
        "url": "https://github.com/ErcongLuo"
      },
      {
        "name": "Rui Qiu",
        "url": "https://github.com/rexarski"
      }
    ],
    "date": "2021-12-06",
    "categories": [],
    "contents": "\nA final project of ANLY-511: Prob Modeling/Stat Computing at\nGeorgetown University.\nPresented by:\nJingsong Gao, jg2109@georgetown.edu\nErcong Luo, el890@georgetown.edu\nRui Qiu, rq47@georgetown.edu\nüîóSee the published\npage.\n\n\n\n",
    "preview": "posts/2021-12-06-kaggle/images/kaggle.png",
    "last_modified": "2022-04-25T11:03:42-04:00",
    "input_file": {},
    "preview_width": 1536,
    "preview_height": 960
  },
  {
    "path": "posts/2021-12-01-eli5c/",
    "title": "A Constrained Long-form Question Answering (LFQA) Model on eli5_category",
    "description": "A final project of ANLY-580: NLP for Data Analytics at Georgetown University.",
    "author": [
      {
        "name": "Jingsong Gao",
        "url": "https://github.com/jingshenSN2"
      },
      {
        "name": "Qinren Zhou",
        "url": "https://github.com/QinrenZhou"
      },
      {
        "name": "Rui Qiu",
        "url": "https://github.com/rexarski"
      }
    ],
    "date": "2021-12-01",
    "categories": [],
    "contents": "\nA final project of ANLY-580: NLP for Data Analytics at\nGeorgetown University.\nimg\nCredit: Darren\nLebeuf\n\n1. Introduction\nThe search engines nowadays enable us to ask any questions as a\nsearch query. However, when it comes to a scientific question, the\nanswer to that question could be either not accurate enough or too\nspecialized to understand. For instance, to fully apprehend a Wikipedia\npage, one might need much prior knowledge in a particular area.\nPrior research on long-form question answering aims to fix this\nissue. ELI5: Long\nForm Question Answering by Facebook (2019) and Hurdles to Progress in Long-form\nQuestion Answering by Google (2021) are two representative papers in\nthis area. Facebook created the ELI5 dataset and used the ROUGE-L metric\nto evaluate the long-form answers in their paper, which the dataset and\nmetric widely used in later research. However, Google‚Äôs paper pointed\nout that the dataset has severe train/validation overlapping and the\nmetric showing a lack of distinction between random answers and gold\nanswers.\nTherefore, instead of training models on a dataset with potential\nissues and gaining higher grades using an invalid metric, our project\nwill focus on recreating a categorized ELI5 dataset and proposing more\ndiscriminatory metrics for this LFQA task.\n2. Dataset\n2.1 Source\nThe subreddit r/explainlikeim5 (ELI5)\nfrom Reddit is a worthy training dataset. Users in this subreddit are\nknown for their objective, thorough and intuitive explanations of\nvarious questions. ELI5 is appealing because answers are supposed to be\nentirely self-contained and thus rely less on pre-existing knowledge of\nthe world and use more straightforward language that is easier to\nmodel.\n2.2 Facebook‚Äôs ELI5\nThe ELI5 dataset\ncreated by Facebook contains more than 270,000 posts in the subreddit\nfrom 2012 to 2019, and each post consists of a scientific question and\nsome easy-to-understand answers.\n2.3 Issues of Uncategorized\nData\nIn Google AI Blog‚Äôs post Progress\nand Challenges in Long-Form Open-Domain Question Answering,\nresearchers addressed three concerning trends in the progress of\nbuilding a more sensible model:\nMany held-out questions are paraphrased in the training set. This is\ncaused by the fact that even though the subreddit /r/explainlikeim5 is\nclearly against repeated questions, it is simply unavoidable.\nROGUE metric is not always a good evaluation standard. This one is\nactually not related to the uncategorized characteristic of the data,\nbut we will mention it again in the later section.\nThe third issue comes as the byproduct of previous two. If we set an\nanswer conditionally generated on random documents, instead of relevant\ndocuments, it still can provide a ‚Äúcorrect‚Äù and factual answer. And at\nthe same time, the longer answer has a higher ROGUE-L score.\nWe aim to tackle the first issue our categorized\nversion of data.\n2.4 Our ELI5_Category\nSo the main question here is: Why categorize the\ndata?\nRecall the overlapping issue we metioned earlier. The most\nstraightforward solution to this is to figure out why the overlapping\noccurs, then we can purposefully resolve it.\nWith the introduction of the thread tagging system in 2017, the\nquestions that appeared in the subreddit are more organized in such a\nmanner. As a result, if we take a random sample collections of questions\nas the training set, and the sample size is large enough, it barely\nimpossible to neglect the fact some questions would be repetitive or\noverlapping.\nIn order to control the overlapping, Hurdles to Progress in Long-form\nQuestion Answering offers two specific solutions:\nAutomatically retrieving paraphrases and then running human\nvalidation to eliminate them.\nHolding out entire genres or domains to reduce the possibility of\noverlap ‚Äî for example, keeping Q/A on Sports only in the held-out\nsets.\nTherefore, we built our abridged but categorized version of the ELI5\ndataset using posts in the subreddit from 2017 to 2021, which named as\nELI5_Category.\nOur dataset contains more than 100,000 questions and 220,000\nanswers.\nThe dataset is split into 1 training set, 2 validation sets, and 1\ntest set according to the category. The number of questions contain in\neach set is listed below.\n\nTrain\nValid\nValid2\nTest\nBiology\n32769\n\n\n\nChemistry\n6633\n\n\n\nCulture\n\n5446\n\n\nEarth Science\n677\n\n\n\nEconomics\n5901\n\n\n\nEngineering\n\n\n\n5411\nMathematics\n1912\n\n\n\nOther\n19312\n\n\n\nPhysics\n10196\n\n\n\nPsychology\n338\n\n\n\nTechnology\n14034\n\n\n\nRepost\n\n\n2375\n\nTotal\n91772\n5446\n2375\n5411\nSome simple aggregations on the ELI5 data will reveal that:\ncategory\nmean_top_score\nmean_all_score\nmean_answer_num\n1 Biology\n205.\n114.\n2.37\n2 Chemistry\n197.\n114.\n2.15\n3 Earth Science\n170.\n81.9\n2.54\n4 Economics\n141.\n75.3\n2.84\n5 Mathematics\n209.\n108.\n2.66\n6 Other\n133.\n72.1\n2.62\n7 Physics\n136.\n78.4\n2.24\n8 Psychology\n159.\n78.4\n2.60\n9 Technology\n169.\n91.7\n2.43\n10 Culture\n162.\n79.7\n3.14\n11 Repost\n281.\n158.\n2.56\n12 Engineering\n179.\n92.5\n2.58\nsummary-statsWhy reposts have higer scores:\nPosts with more reposts tend to contain trending topcis, which means\nusers are more motivated to answer.\nHiger scores of reposts can come from higher correctness of the\nsolution, that‚Äôs also why those questions are frequently reposted.\nReposts are not classified by category intentionally, indicating\nthat using the reposts as training set may lead to overlapping\nproblems.\n\n2.5 Ground Truth\nSince answers are generated based on pre-existing knowledges, the\nmodel need to find supporting documents for questions first. Here, we\nuse the wiki_snippets(wiki40b_en_100_0)\ndataset as the ground truth to support the model answering those\nquestions. This wikipedia dataset contains more than 17,500,000 snippets\nfrom Wikipedia.\n3. Model\n3.1 Two-stage Model Structure\n > Credit: Yacine Jernite\nOur LFQA model has a two-stage model structure:\nRetriever-Generator. First, document retriever model\nselects a set of Wikipedia passages that relevant to the input questions\nas supporting documents. Then, the answer generator model takes the\nconcatenation of the input question and supporting documents as input\nand writes the answer.\n3.2 Retrierver: BERT + Faiss\n > Credit: Yacine Jernite\nThe retriever model is based on a pretrained BERT-like structure, but\nwith an additional linear layer that projects the BERT output down to\n128 dimensions embeddings. The projection layer is finetuned using QA\npairs in training set to minimize the dot-product between question\nembedding and answer embedding.\n > Credit: Yacine Jernite\nTo find the best relevant supporting documents, we do a Approximate\nNearest Neighbor search with all Wikipedia passages‚Äô embedding vectors.\nThe ANN search is accelerated by pre-clustering Wikipedia embeddings\nusing Facebook‚Äôs faiss library.\n3.3 Generator: BART\n > Credit: Papers with Code\nBART is a denoising autoencoder for pretraining sequence-to-sequence\nmodels. It is trained by (1) corrupting text with an arbitrary noising\nfunction, and (2) learning a model to reconstruct the original text. It\nuses a standard seq2seq/NMT architecture with a bidirectional encoder\n(like BERT) and a left-to-right decoder (like GPT). In our work, we\ninput the question and supporting documents to the BART model and use\nmodel outputs as answers.\n4. Results\n4.1 Model Training\n4.1.1 Retrierver\nA pretrained BERT(google/bert_uncased_L-8_H-768_A-12)\nmodel is fine-tuned on the training set for 10 epochs.\n\nGPU: RTX 2080S, epoch: 26 min,\ntotal: 4.5 hours, checkpoint size: 930\nMB\n\nThe 128-dimensional embeddings of training/validation sets and all\nwiki_snippets are calculated and saved to binary files.\n\nGPU: RTX 2080S, training/validation sets: 4\nhours, wiki_snippets: 11 hours\n\nThe top 10 related snippets are then retrieved as supporting\ndocuments using pre-calculated embeddings. Due to large memory\nrequirement, this step is performed on a intel i7-9700K CPU with 48 GB\nDDR4 memory which takes 5 minutes.\n4.1.2 Generator\nA pretained BART(bart-base)\nmodel is fine-tuned on all answers in the training set\nwith pre-retrieved supporting documents for 3 epochs. Due to large\nmemory requirement, this step is performed on Google Colab with Colab\nPro.\n\nGPU: Colab Pro, epoch: 4.5 hours,\ntotal: 14 hours, checkpoint size: 1.55\nGB\n\nSince BART(bart-large)\nmodel contains 2.8x parameters (400M vs 140M) comparing to bart-base. We\nexpected to get more reasonable outputs from that model. Therefore, two\nsubsets of training set are used to fine-tune for 10 epochs: (1) 6633\nquestions and their 1st answers in\nChemistry category; (2) first 6633 questions and their\n1st answers from training set in\nmultiple categories.\n\nGPU: Colab Pro, epoch: 28 min,\ntotal: 5 hours, checkpoint size: 4.54\nGB\n\n4.2 Model Comparison\n4.2.1 The Absence of ROGUE\nMetric\nAs mentioned earlier, the ROGUE metric used in the evaluation of the\nmodel performance is problematic as it gives higher score to some\nseemingly nonsense generated answers while underestimating the top\nanswers.\nTo make our life easier, we decide to evaluate the performance of a\nmodel based on our intuitive judgement.\n4.2.2 Learning Rate Tuning\nNote that changing settings of the retriever model requires us to\nre-calculate the 128d embeddings and re-train the generator model, so\ntuning of model settings are only performed on the generator model.\nmodel\ndataset\nsize\nlearning rate\nepochs\nnote\nbart-base\nfull eli5c\n224088\n\\(2\\times10^{-4}\\)\n3\nsuccess\nbart-large\nchemistry\n6633\n\\(2\\times10^{-4}\\)\n3\nfail to converge at epoch0\nbart-large\nchemistry\n6633\n\\(2\\times10^{-3}\\)\n10\nfail to converge at epoch0\nbart-large\nchemistry\n6633\n\\(2\\times10^{-4}\\)\n10\nfail to converge at epoch0\nbart-large\nchemistry\n6633\n\\(1\\times10^{-4}\\)\n10\nsuccess until epoch9\nbart-large\nchemistry\n6633\n\\(5\\times10^{-5}\\)\n10\nsuccess\nbart-large\nrandom\n6633\n\\(1\\times10^{-4}\\)\n10\nfail to converge at epoch0\nbart-large\nrandom\n6633\n\\(5\\times10^{-5}\\)\n10\nsuccess\n\nWe didn‚Äôt capture the interim model training outputs of ‚Äúfailed‚Äù or\noverfitted models.\n\nloss-functions4.2.3 Sample QAs\n\neli5c_reddit_testüìä\n(Sample answers from various models.)\n\n5. Limitations and Reflections\nDue to the limitation of computational power, we cannot train the\nmodel with both enough epochs and enough categories\ncoverage. So we either pick a smaller subset to run more\nepochs, or train the model on the complete dataset but with a few\nepochs. In contrast, Facebook‚Äôs trial was conducted on 4 GPUs\nwith 3 epochs (18 hours per epoch).\nHowever, our selected models seem to have a decent performance with\nless training time and data.\nIt‚Äôs hard to measure how our model performs after all. No scientific\nevaluation metrics are involved. A possible solution is to use\ncrowdsourcing human evaluation to grade the generated answers by\ncorrectness and some other linguistic dimensions. Again, this could be\nboth time-consuming since the evaluators need extended time to learn\nsome facts about the question themselves if they are no experts in those\nareas.\n6. Demo Showcase\nAs proposed in the proposal, a prototype of open-ended\nquestion-answering website is hosted as a deliverable. The model behind\nit is bart-large(dataset: random6633, learning rate: 5e-5).\nAlthough the model was trained with a small subset of the entire QA\ndataset, it actually delivers some seemingly meaningful answers.\nInteractive\nDemo (deployed on personal PC, if not work, try the backup video demoüìº.)\n\nGitHub\nRepositoryüê±\nColab\nPlaygroundüß™ (Need GU email or permission to access.).\nWorking\nnotebooküìô.\n\njsgao/eli5_categoryüìö\n\nReferences\nIntroducing\nlong-form question answering\nExplain Anything Like\nI‚Äôm Five: A Model for Open Domain Long Form Question Answering\nELI5\nGitHub\nrepository\nPaper\n\nProgress\nand Challenges in Long-Form Open-Domain Question Answering\nHurdles to Progress in\nLong-form Question Answering\nwiki40b,\nclean-up text for 40+ Wikipedia languages editions of pages correspond\nto entities.\n\n\n\n",
    "preview": "posts/2021-12-01-eli5c/images/eli5c.jpg",
    "last_modified": "2022-04-25T11:03:32-04:00",
    "input_file": {}
  }
]
